<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="9531" systemVersion="15C50" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none">
    <dependencies>
        <deployment identifier="iOS"/>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="9529"/>
    </dependencies>
    <objects>
        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner" customClass="AcceptanceVC">
            <connections>
                <outlet property="acceptButton" destination="MPQ-HW-ynS" id="gFW-IE-RTp"/>
                <outlet property="textView" destination="HCn-iB-Ath" id="kN8-2k-cOe"/>
            </connections>
        </placeholder>
        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
        <view contentMode="scaleToFill" id="iN0-l3-epB">
            <rect key="frame" x="0.0" y="0.0" width="768" height="1024"/>
            <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
            <subviews>
                <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" editable="NO" textAlignment="natural" id="HCn-iB-Ath">
                    <rect key="frame" x="14" y="20" width="740" height="942"/>
                    <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                    <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                    <mutableString key="text" base64-UTF8="YES">
CgoJMTIvMjkvMjAxNSBEUkFGVApFTkdMSVNICgpJTVBPUlRBTlQ6IEJZIFVTSU5HIFRIRSBBQ0UgQVBQ
IFlPVSBBUkUgQUdSRUVJTkcgVE8gQkUgQk9VTkQgQlkgVEhFIFRFUk1TCkFORCBDT05ESVRJT05TIE9G
IFRISVMgU09GVFdBUkUgTElDRU5TRSBBR1JFRU1FTlQuCgoKCgpWVENTRUNVUkUsIExMQwpTT0ZUV0FS
RSBMSUNFTlNFIEFHUkVFTUVOVApTaW5nbGUgVXNlIExpY2Vuc2UKCkJFRk9SRSBZT1UgQ0xJQ0sgT04g
VEhFICJJIEFHUkVFIiBCVVRUT04gQkVMT1cgQU5EIEFDQ0VTUyBBTkQvT1IgVVNFIFRIRSBTT0ZUV0FS
RSAoQVMgREVGSU5FRCBCRUxPVykgT1IgRE9XTkxPQUQgQU5ZIFNPRlRXQVJFIFVQREFURSAoQVMgREVG
SU5FRCBCRUxPVyksIFBMRUFTRSBDQVJFRlVMTFkgUkVBRCBUSElTIFNPRlRXQVJFIExJQ0VOU0UgQUdS
RUVNRU5UICgiTElDRU5TRSIpLiBCWSBVU0lORyBUSEUgQUNFIEFQUCBTT0ZUV0FSRSBPUiBET1dOTE9B
RElORyBBTlkgU09GVFdBUkUgVVBEQVRFLCBBUyBBUFBMSUNBQkxFLCBZT1UgQVJFIEFHUkVFSU5HIFRP
IEJFIEJPVU5EIEJZIFRIRSBURVJNUyBBTkQgQ09ORElUSU9OUyBPRiBUSElTIExJQ0VOU0UuIElGIFlP
VSBETyBOT1QgQUdSRUUgVE8gVEhFIFRFUk1TIE9GIFRISVMgTElDRU5TRSwgRE8gTk9UIFVTRSBUSEUg
QUNFIEFQUCBTT0ZUV0FSRSBPUiBET1dOTE9BRCBBTlkgU09GVFdBUkUgVVBEQVRFLiBCWSBDTElDS0lO
RyBUSEUgIkkgQUdSRUXigJ0gQlVUVE9OIEJFTE9XLCBZT1UgQUNLTk9XTEVER0UgVEhBVCBZT1UgSEFW
RSBSRUFELCBVTkRFUlNUQU5ELCBBTkQgQUdSRUUgVE8gQUxMIE9GIFRIRSBURVJNUyBBTkQgQ09ORElU
SU9OUyBPRiBUSEUgTElDRU5TRS4gVlRDU0VDVVJFIFJFU0VSVkVTIFRIRSBSSUdIVCwgV0lUSCBPUiBX
SVRIT1VUIE5PVElDRSwgVE8gQU1FTkQgT1IgTU9ESUZZIFRISVMgTElDRU5TRSBBTkQgWU9VIEFHUkVF
IFRPIEJFIEJPVU5EIEJZIEFOWSBTVUNIIEFNRU5ETUVOVCBPUiBNT0RJRklDQVRJT04uIE1PRElGSUNB
VElPTlMgT1IgQU1FTkRNRU5UUyBUTyBUSElTIExJQ0VOU0UgU0hBTEwgQkUgRUZGRUNUSVZFIEFUIFRI
RSBUSU1FIFRIRVkgQVJFIFBPU1RFRCBPTiBUSEUgVlRDU0VDVVJFIFdFQlNJVEUuIFRISVMgTElDRU5T
RSBJUyBOT1QgREVQRU5ERU5UIE9OIEFOWSBGVVRVUkUgRlVOQ1RJT05BTElUWSBPUiBGRUFUVVJFUy4K
CgnigKIJR2VuZXJhbC4KCgnigKIJVGhlIFZUQ1NlY3VyZSwgTExDICjigJxWVENTZWN1cmXigJ0pIHNv
ZnR3YXJlIChpbmNsdWRpbmcgQm9vdCBST00gY29kZSwgZW1iZWRkZWQgc29mdHdhcmUgYW5kIHRoaXJk
IHBhcnR5IHNvZnR3YXJlKSwgZG9jdW1lbnRhdGlvbiwgaW50ZXJmYWNlcywgY29udGVudCwgZm9udHMg
YW5kIGFueSBkYXRhIHRoYXQgY2FtZSB3aXRoIHlvdXIgQUNFIEFwcCAoIk9yaWdpbmFsIFNvZnR3YXJl
IiksIGFzIG1heSBiZSB1cGRhdGVkIG9yIHJlcGxhY2VkIGZyb20gdGltZSB0byB0aW1lIGJ5IGZlYXR1
cmUgZW5oYW5jZW1lbnRzLCBzb2Z0d2FyZSB1cGRhdGVzLCBhbmQvb3Igc3lzdGVtIHJlc3RvcmUgc29m
dHdhcmUgcHJvdmlkZWQgYnkgVlRDU2VjdXJlICgiU29mdHdhcmUgVXBkYXRlcyIpLCB3aGV0aGVyIGlu
IHJlYWQgb25seSBtZW1vcnksIG9uIGFueSBvdGhlciBtZWRpYSBvciBpbiBhbnkgb3RoZXIgZm9ybSAo
dGhlIE9yaWdpbmFsIFNvZnR3YXJlIGFuZCBTb2Z0d2FyZSBVcGRhdGVzIGFyZSBjb2xsZWN0aXZlbHkg
cmVmZXJyZWQgdG8gYXMgdGhlIOKAnFNvZnR3YXJlIikgYXJlIGxpY2Vuc2VkLCBub3Qgc29sZCwgdG8g
eW91IGJ5IFZUQ1NlY3VyZSBmb3IgdXNlIG9ubHkgdW5kZXIgdGhlIHRlcm1zIG9mIHRoaXMgTGljZW5z
ZS4gVlRDU2VjdXJlIHJldGFpbnMgb3duZXJzaGlwIG9mIHRoZSBTb2Z0d2FyZSBhbmQgcmVzZXJ2ZXMg
YWxsIHJpZ2h0cyBub3QgZXhwcmVzc2x5IGdyYW50ZWQgdG8geW91LiBZb3UgYWdyZWUgdGhhdCB0aGUg
dGVybXMgb2YgdGhpcyBMaWNlbnNlIHdpbGwgYXBwbHkgdG8gdGhlIFNvZnR3YXJlIGFuZCBhbnkgdXNl
IGJ5IHlvdSBvZiB0aGUgU29mdHdhcmUuCgoJ4oCiCVZUQ1NlY3VyZSwgYXQgaXRzIGRpc2NyZXRpb24s
IG1heSBtYWtlIGF2YWlsYWJsZSBmdXR1cmUgU29mdHdhcmUgVXBkYXRlcyBmb3IgdGhlIEFDRSBBcHAu
IFRoZSBTb2Z0d2FyZSBVcGRhdGVzLCBpZiBhbnksIG1heSBub3QgbmVjZXNzYXJpbHkgaW5jbHVkZSBh
bGwgZXhpc3Rpbmcgc29mdHdhcmUgZmVhdHVyZXMuIFRoZSB0ZXJtcyBvZiB0aGlzIExpY2Vuc2Ugd2ls
bCBnb3Zlcm4gYW55IFNvZnR3YXJlIFVwZGF0ZXMgcHJvdmlkZWQgYnkgVlRDU2VjdXJlIHRoYXQgcmVw
bGFjZSBhbmQvb3Igc3VwcGxlbWVudCB0aGUgT3JpZ2luYWwgU29mdHdhcmUgcHJvZHVjdCwgdW5sZXNz
IHN1Y2ggU29mdHdhcmUgVXBkYXRlCmlzIGFjY29tcGFuaWVkIGJ5IGEgc2VwYXJhdGUgbGljZW5zZSwg
aW4gd2hpY2ggY2FzZSB0aGUgdGVybXMgb2YgdGhhdCBsaWNlbnNlIHdpbGwgZ292ZXJuLgoMCgoJ4oCi
CVBlcm1pdHRlZCBMaWNlbnNlIFVzZXMgYW5kIFJlc3RyaWN0aW9ucy4KCgnigKIJU3ViamVjdCB0byB0
aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhpcyBMaWNlbnNlLCB5b3UgYXJlIGdyYW50ZWQgYSBs
aW1pdGVkLCByZXZvY2FibGUsIG5vbi1hc3NpZ25hYmxlLCBub24tc3VibGljZW5zYWJsZSwgbm9uLWV4
Y2x1c2l2ZSBsaWNlbnNlIHRvIHVzZSB0aGUgU29mdHdhcmUgb24gYSBzaW5nbGUgZGV2aWNlLiBFeGNl
cHQgYXMgcGVybWl0dGVkIGluIFNlY3Rpb24gMihiKSBiZWxvdywgYW5kIGV4Y2VwdCBhcyBwcm92aWRl
ZCBpbiBhIHNlcGFyYXRlIHdyaXR0ZW4gYWdyZWVtZW50IGJldHdlZW4geW91IGFuZCBWVENTZWN1cmUs
IHRoaXMgTGljZW5zZSBkb2VzIG5vdCBhbGxvdyB0aGUgU29mdHdhcmUgdG8gZXhpc3Qgb24gbW9yZSB0
aGFuIG9uZSBkZXZpY2UgYXQgYSB0aW1lLCBhbmQgeW91IG1heSBub3QgZGlzdHJpYnV0ZSBvciBtYWtl
IHRoZSBTb2Z0d2FyZSBhdmFpbGFibGUgb3ZlciBhIG5ldHdvcmsgd2hlcmUgaXQgY291bGQgYmUgdXNl
ZCBieSBtdWx0aXBsZSBkZXZpY2VzIGF0IHRoZSBzYW1lIHRpbWUuIFRoaXMgTGljZW5zZSBkb2VzIG5v
dCBncmFudCB5b3UgYW55IHJpZ2h0cyB0byB1c2UgVlRDU2VjdXJlIHByb3ByaWV0YXJ5IGludGVyZmFj
ZXMgYW5kL29yIGFueSBvdGhlciBpbnRlbGxlY3R1YWwgcHJvcGVydHkgaW4gdGhlIGRlc2lnbiwgZGV2
ZWxvcG1lbnQsIG1hbnVmYWN0dXJlLCBsaWNlbnNpbmcgb3IgZGlzdHJpYnV0aW9uIG9mIHRoaXJkIHBh
cnR5IGRldmljZXMgYW5kIGFjY2Vzc29yaWVzLCBvciB0aGlyZCBwYXJ0eSBzb2Z0d2FyZSBhcHBsaWNh
dGlvbnMsIGZvciB1c2Ugd2l0aCB0aGUgQUNFIEFwcC4gU29tZSBvZiB0aG9zZSByaWdodHMgYXJlIGF2
YWlsYWJsZSB1bmRlciBzZXBhcmF0ZSBsaWNlbnNlcyBmcm9tIFZUQ1NlY3VyZS4KCgnigKIJU3ViamVj
dCB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhpcyBMaWNlbnNlLCB5b3UgYXJlIGdyYW50
ZWQgYSBsaW1pdGVkLCByZXZvY2FibGUsIG5vbi1hc3NpZ25hYmxlLCBub24tc3VibGljZW5zYWJsZSwg
bm9uLWV4Y2x1c2l2ZSBsaWNlbnNlIHRvIGRvd25sb2FkIFNvZnR3YXJlIFVwZGF0ZXMgdGhhdCBtYXkg
YmUgbWFkZSBhdmFpbGFibGUgYnkgVlRDU2VjdXJlIHRvIHVwZGF0ZSBvciByZXN0b3JlIHRoZSBTb2Z0
d2FyZSBvbiBhbnkgZGV2aWNlIHlvdSBvd24gb3IgY29udHJvbC4gVGhpcyBMaWNlbnNlIGRvZXMgbm90
IGFsbG93IHlvdSB0byB1cGRhdGUgb3IgcmVzdG9yZSBhbnkgZGV2aWNlIHRoYXQgeW91IGRvIG5vdCBj
b250cm9sIG9yIG93biwgYW5kIHlvdSBtYXkgbm90IGRpc3RyaWJ1dGUgb3IgbWFrZSB0aGUgU29mdHdh
cmUgVXBkYXRlcyBhdmFpbGFibGUgb3ZlciBhIG5ldHdvcmsgd2hlcmUgdGhleSBjb3VsZCBiZSB1c2Vk
IGJ5IG11bHRpcGxlIGRldmljZXMgYXQgdGhlIHNhbWUgdGltZS4KCgnigKIJWW91IG1heSBub3QsIGFu
ZCB5b3UgYWdyZWUgbm90IHRvIG9yIGVuYWJsZSBvdGhlcnMgdG8sIGNvcHkgKGV4Y2VwdCBhcyBleHBy
ZXNzbHkgcGVybWl0dGVkIGJ5IHRoaXMgTGljZW5zZSksIGRlY29tcGlsZSwgcmV2ZXJzZSBlbmdpbmVl
ciwgZGlzYXNzZW1ibGUsIGF0dGVtcHQgdG8gZGVyaXZlIHRoZSBzb3VyY2UgY29kZSBvZiwgZGVjcnlw
dCwgbW9kaWZ5LCBvciBjcmVhdGUgZGVyaXZhdGl2ZSB3b3JrcyBvZiB0aGUgU29mdHdhcmUgb3IgYW55
IHNlcnZpY2VzIHByb3ZpZGVkIGJ5IHRoZSBTb2Z0d2FyZSBvciBhbnkgcGFydCB0aGVyZW9mIChleGNl
cHQgYXMgYW5kIG9ubHkgdG8gdGhlIGV4dGVudCBhbnkgZm9yZWdvaW5nIHJlc3RyaWN0aW9uIGlzIHBy
b2hpYml0ZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYnkgbGljZW5zaW5nIHRlcm1zIGdvdmVybmluZyB1
c2Ugb2Ygb3Blbi1zb3VyY2UgY29tcG9uZW50cyB0aGF0IG1heSBiZSBpbmNsdWRlZCB3aXRoIHRoZSBT
b2Z0d2FyZSkuCgoJ4oCiCVRoZSBTb2Z0d2FyZSBtYXkgYmUgdXNlZCB0byByZXByb2R1Y2UgbWF0ZXJp
YWxzIHNvIGxvbmcgYXMgc3VjaCB1c2UgaXMgbGltaXRlZCB0byByZXByb2R1Y3Rpb24gb2Ygbm9uLWNv
cHlyaWdodGVkIG1hdGVyaWFscywgbWF0ZXJpYWxzIGluIHdoaWNoIHlvdSBvd24gdGhlIGNvcHlyaWdo
dCwgb3IgbWF0ZXJpYWxzIHlvdSBhcmUgYXV0aG9yaXplZCBvciBsZWdhbGx5IHBlcm1pdHRlZCB0byBy
ZXByb2R1Y2UuIFRpdGxlIGFuZCBpbnRlbGxlY3R1YWwgcHJvcGVydHkgcmlnaHRzIGluIGFuZCB0byBh
bnkgY29udGVudCBkaXNwbGF5ZWQgYnksIHN0b3JlZCBvbiBvciBhY2Nlc3NlZCB0aHJvdWdoIHRoZSBB
Q0UgQXBwIGJlbG9uZyB0byB0aGUgcmVzcGVjdGl2ZSBjb250ZW50IG93bmVyLiBTdWNoIGNvbnRlbnQg
bWF5IGJlIHByb3RlY3RlZCBieSBjb3B5cmlnaHQgb3Igb3RoZXIgaW50ZWxsZWN0dWFsIHByb3BlcnR5
IGxhd3MgYW5kIHRyZWF0aWVzLCBhbmQgbWF5IGJlIHN1YmplY3QgdG8gdGVybXMgb2YgdXNlIG9mIHRo
ZSB0aGlyZCBwYXJ0eSBwcm92aWRpbmcgc3VjaCBjb250ZW50LiBFeGNlcHQgYXMgb3RoZXJ3aXNlIHBy
b3ZpZGVkIGhlcmVpbiwgdGhpcyBMaWNlbnNlIGRvZXMgbm90IGdyYW50IHlvdSBhbnkgcmlnaHRzIHRv
IHVzZSBzdWNoIGNvbnRlbnQgbm9yIGRvZXMgaXQgZ3VhcmFudGVlIHRoYXQgc3VjaCBjb250ZW50IHdp
bGwgY29udGludWUgdG8gYmUgYXZhaWxhYmxlIHRvIHlvdS4KCihlKSBZb3UgYWdyZWUgdG8gdXNlIHRo
ZSBTb2Z0d2FyZSBhbmQgdGhlIFNlcnZpY2VzIChhcyBkZWZpbmVkIGluIFNlY3Rpb24gNSBiZWxvdykg
aW4gY29tcGxpYW5jZSB3aXRoIGFsbCBhcHBsaWNhYmxlIGxhd3MsIGluY2x1ZGluZyBsb2NhbCBsYXdz
IG9mIHRoZSBjb3VudHJ5IG9yIHJlZ2lvbiBpbiB3aGljaCB5b3UgcmVzaWRlIG9yIGluIHdoaWNoIHlv
dSBkb3dubG9hZCBvciB1c2UgdGhlIFNvZnR3YXJlIGFuZCBTZXJ2aWNlcy4gRmVhdHVyZXMgb2YgdGhl
IFNvZnR3YXJlIGFuZCB0aGUgU2VydmljZXMgbWF5IG5vdCBiZSBhdmFpbGFibGUgaW4gYWxsIGxhbmd1
YWdlcyBvciByZWdpb25zLCBzb21lIGZlYXR1cmVzIG1heSB2YXJ5IGJ5IHJlZ2lvbiwgYW5kIHNvbWUg
bWF5IGJlIHJlc3RyaWN0ZWQgb3IgdW5hdmFpbGFibGUgZnJvbSB5b3VyIHNlcnZpY2UgcHJvdmlkZXIu
CgwKCihmKSBVc2luZyB0aGUgQUNFIEFwcCBpbiBzb21lIGNpcmN1bXN0YW5jZXMgY2FuIGRpc3RyYWN0
IHlvdSBhbmQgbWF5IGNhdXNlIGEgZGFuZ2Vyb3VzIHNpdHVhdGlvbiAoZm9yIGV4YW1wbGUsIGF2b2lk
IHR5cGluZyB0ZXh0IG1lc3NhZ2VzIHdoaWxlIGRyaXZpbmcgYSBjYXIgb3IgdXNpbmcgaGVhZHBob25l
cyB3aGlsZSByaWRpbmcgYSBiaWN5Y2xlKS4gQnkgdXNpbmcgdGhlIEFDRSBBcHAgeW91IGFncmVlIHRo
YXQgeW91IGFyZSByZXNwb25zaWJsZSBmb3Igb2JzZXJ2aW5nIHJ1bGVzIHRoYXQgcHJvaGliaXQgb3Ig
cmVzdHJpY3QgdGhlIHVzZSBvZiBtb2JpbGUgcGhvbmVzIG9yIGhlYWRwaG9uZXMgKGZvciBleGFtcGxl
LCB0aGUgcmVxdWlyZW1lbnQgdG8gdXNlIGhhbmRzLWZyZWUgb3B0aW9ucyBmb3IgbWFraW5nIGNhbGxz
IHdoZW4gZHJpdmluZykuCgoJ4oCiCVRyYW5zZmVyLiBZb3UgbWF5IG5vdCByZW50LCBsZWFzZSwgbGVu
ZCwgc2VsbCwgcmVkaXN0cmlidXRlLCBvciBzdWJsaWNlbnNlIHRoZSBTb2Z0d2FyZS4KCgnigKIJQ29u
c2VudCB0byBVc2Ugb2YgRGF0YS4gVGhlIFNvZnR3YXJlIG1heSByZXF1aXJlIGluZm9ybWF0aW9uIGZy
b20geW91ciBkZXZpY2UuIFlvdSBjYW4gZmluZCBtb3JlIGluZm9ybWF0aW9uIG9uIHdoaWNoIGZlYXR1
cmVzIHNlbmQgaW5mb3JtYXRpb24gdG8gVlRDU2VjdXJlLCB3aGF0IGluZm9ybWF0aW9uIHRoZXkgc2Vu
ZCBhbmQgaG93IGl0IG1heSBiZSB1c2VkLCB3aGVuIHlvdSB0dXJuIG9uIG9yIHVzZSB0aGUgZmVhdHVy
ZXMuIEF0IGFsbCB0aW1lcyB5b3VyIGluZm9ybWF0aW9uIHdpbGwgYmUgdHJlYXRlZCBpbiBhY2NvcmRh
bmNlIHdpdGggVlRDU2VjdXJlJ3MgUHJpdmFjeSBQb2xpY3ksIHdoaWNoIGNhbiBiZSB2aWV3ZWQgYXQg
d3d3LlZUQ1NlY3VyZS5jb20uCgoJ4oCiCVNlcnZpY2VzLgoKCeKAoglUaGUgU29mdHdhcmUgbWF5IGVu
YWJsZSBhY2Nlc3MgdG8gdGhpcmQgcGFydHkgc2VydmljZXMgYW5kIHdlYiBzaXRlcyAoY29sbGVjdGl2
ZWx5IGFuZCBpbmRpdmlkdWFsbHksICJTZXJ2aWNlcyIpLiBTdWNoIFNlcnZpY2VzIG1heSBub3QgYmUg
YXZhaWxhYmxlIGluIGFsbCBsYW5ndWFnZXMgb3IgaW4gYWxsIGNvdW50cmllcy4gVXNlIG9mIHRoZXNl
IFNlcnZpY2VzIHJlcXVpcmVzIEludGVybmV0IGFjY2VzcyBhbmQgdXNlIG9mIGNlcnRhaW4gU2Vydmlj
ZXMgbWF5IHJlcXVpcmUgYSB1c2VyIG5hbWUgYW5kIHBhc3N3b3JkLCBhbmQgbWF5IHJlcXVpcmUgeW91
IHRvIGFjY2VwdCBhZGRpdGlvbmFsIHRlcm1zIGFuZCBtYXkgYmUgc3ViamVjdCB0byBhZGRpdGlvbmFs
IGZlZXMuCgnigKIJVlRDU2VjdXJlIGRvZXMgbm90IGd1YXJhbnRlZSB0aGUgYXZhaWxhYmlsaXR5LCBh
Y2N1cmFjeSwgY29tcGxldGVuZXNzLCByZWxpYWJpbGl0eSwgb3IgdGltZWxpbmVzcyBvZiBsb2NhdGlv
biBkYXRhIG9yIGFueSBvdGhlciBkYXRhIGRpc3BsYXllZCBieSB0aGUgU29mdHdhcmUgb3IgU2Vydmlj
ZXMuICBMb2NhdGlvbiBkYXRhLCB3aGV0aGVyIHByb3ZpZGVkIGJ5IHRoZSBTb2Z0d2FyZSBvciBTZXJ2
aWNlcywgaXMgbm90IGludGVuZGVkIHRvIGJlIHJlbGllZCB1cG9uIGluIHNpdHVhdGlvbnMgd2hlcmUg
cHJlY2lzZSBsb2NhdGlvbiBpbmZvcm1hdGlvbiBpcyBuZWVkZWQgb3Igd2hlcmUgZXJyb25lb3VzLCBp
bmFjY3VyYXRlLCB0aW1lLWRlbGF5ZWQgb3IgaW5jb21wbGV0ZSBsb2NhdGlvbiBkYXRhIG1heSBsZWFk
IHRvIGRlYXRoLCBwZXJzb25hbCBpbmp1cnksIHByb3BlcnR5IG9yIGVudmlyb25tZW50YWwgZGFtYWdl
LgoJ4oCiCVRvIHRoZSBleHRlbnQgdGhhdCB5b3UgdXBsb2FkIGFueSBjb250ZW50IHRocm91Z2ggdGhl
IHVzZSBvZiB0aGUgU2VydmljZXMsIHlvdSByZXByZXNlbnQgdGhhdCB5b3Ugb3duIGFsbCByaWdodHMg
aW4sIG9yIGhhdmUgYXV0aG9yaXphdGlvbiBvciBhcmUgb3RoZXJ3aXNlIGxlZ2FsbHkgcGVybWl0dGVk
IHRvIHVwbG9hZCwgc3VjaCBjb250ZW50IGFuZCB0aGF0IHN1Y2ggY29udGVudCBkb2VzIG5vdCB2aW9s
YXRlIGFueSB0ZXJtcyBvZiBzZXJ2aWNlIGFwcGxpY2FibGUgdG8gdGhlIFNlcnZpY2VzLiBZb3UgYWdy
ZWUgdGhhdCB0aGUgU2VydmljZXMgY29udGFpbiBwcm9wcmlldGFyeSBjb250ZW50LCBpbmZvcm1hdGlv
biBhbmQgbWF0ZXJpYWwgdGhhdCBpcyBvd25lZCBieSB0aGUgdGhpcmQgcGFydHkgc2VydmljZSBwcm92
aWRlcihzKSwgdGhlIHNpdGUgb3duZXIgYW5kL29yIHRoZWlyIGxpY2Vuc29ycywgYW5kIGlzIHByb3Rl
Y3RlZCBieSBhcHBsaWNhYmxlIGludGVsbGVjdHVhbCBwcm9wZXJ0eSBhbmQgb3RoZXIgbGF3cywgaW5j
bHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byBjb3B5cmlnaHQuIFlvdSBhZ3JlZSB0aGF0IHlvdSB3aWxs
IG5vdCB1c2Ugc3VjaCBwcm9wcmlldGFyeSBjb250ZW50LCBpbmZvcm1hdGlvbiBvciBtYXRlcmlhbHMg
b3RoZXIgdGhhbiBmb3IgcGVybWl0dGVkIHVzZSBvZiB0aGUgU29mdHdhcmUgb3IgaW4gYW55IG1hbm5l
ciB0aGF0IGlzIGluY29uc2lzdGVudCB3aXRoIHRoZSB0ZXJtcyBvZiB0aGlzIExpY2Vuc2Ugb3IgdGhh
dCBpbmZyaW5nZXMgYW55IGludGVsbGVjdHVhbCBwcm9wZXJ0eSByaWdodHMgb2YgYSB0aGlyZCBwYXJ0
eSBvciBWVENTZWN1cmUuIE5vIHBvcnRpb24gb2YgdGhlIFNvZnR3YXJlIG1heSBiZSByZXByb2R1Y2Vk
IGluIGFueSBmb3JtIG9yIGJ5IGFueSBtZWFucy4gWW91IGFncmVlIG5vdCB0byBtb2RpZnksIHJlbnQs
IGxlYXNlLCBsb2FuLCBzZWxsLCBkaXN0cmlidXRlLCBvciBjcmVhdGUgZGVyaXZhdGl2ZSB3b3JrcyBi
YXNlZCBvbiB0aGUgU2VydmljZXMsIGluIGFueSBtYW5uZXIsIGFuZCB5b3Ugc2hhbGwgbm90IGV4cGxv
aXQgdGhlIFNlcnZpY2VzIGluIGFueSB1bmF1dGhvcml6ZWQgd2F5IHdoYXRzb2V2ZXIsIGluY2x1ZGlu
ZyBidXQgbm90IGxpbWl0ZWQgdG8sIHVzaW5nIHRoZSBTZXJ2aWNlcyB0byB0cmFuc21pdCBhbnkgY29t
cHV0ZXIgdmlydXNlcywgd29ybXMsIHRyb2phbiBob3JzZXMgb3Igb3RoZXIgbWFsd2FyZSwgb3IgYnkg
dHJlc3Bhc3Mgb3IgYnVyZGVuaW5nIG5ldHdvcmsgY2FwYWNpdHkuIFlvdSBmdXJ0aGVyIGFncmVlIG5v
dCB0byB1c2UgdGhlIFNlcnZpY2VzIGluIGFueSBtYW5uZXIgdG8gaGFyYXNzLCBhYnVzZSwgc3RhbGss
IHRocmVhdGVuLCBkZWZhbWUgb3Igb3RoZXJ3aXNlIGluZnJpbmdlIG9yIHZpb2xhdGUgdGhlIHJpZ2h0
cyBvZiBhbnkgb3RoZXIgcGFydHksIGFuZCB0aGF0IFZUQ1NlY3VyZSBpcyBub3QgaW4gYW55IHdheSBy
ZXNwb25zaWJsZSBmb3IgYW55IHN1Y2ggdXNlIGJ5IHlvdSwgbm9yIGZvciBhbnkgaGFyYXNzaW5nLCB0
aHJlYXRlbmluZywgZGVmYW1hdG9yeSwgb2ZmZW5zaXZlLCBpbmZyaW5naW5nIG9yIGlsbGVnYWwgbWVz
c2FnZXMgb3IgdHJhbnNtaXNzaW9ucyB0aGF0IHlvdSBtYXkgcmVjZWl2ZSBhcyBhIHJlc3VsdCBvZiB1
c2luZyB0aGUgU29mdHdhcmUgYW5kL29yIGFueSBvZiB0aGUgU2VydmljZXMuCgnigKIJSW4gYWRkaXRp
b24sIFNlcnZpY2VzIGFuZCBhbnkgdGhpcmQgcGFydHkgbWF0ZXJpYWxzIHRoYXQgbWF5IGJlIGFjY2Vz
c2VkLCBsaW5rZWQgdG8gb3IgZGlzcGxheWVkIG9uIHRoZSBTb2Z0d2FyZSBhcmUgbm90IGF2YWlsYWJs
ZSBpbiBhbGwgbGFuZ3VhZ2VzIG9yIGluIGFsbCBjb3VudHJpZXMgb3IgcmVnaW9ucy4gVlRDU2VjdXJl
IG1ha2VzIG5vIHJlcHJlc2VudGF0aW9uIHRoYXQgc3VjaCBTZXJ2aWNlcyBhbmQvb3IgdGhpcmQgcGFy
dHkgbWF0ZXJpYWxzIGFyZSBhcHByb3ByaWF0ZSBvciBhdmFpbGFibGUgZm9yIHVzZSBpbiBhbnkgcGFy
dGljdWxhciBsb2NhdGlvbi4gVG8gdGhlIGV4dGVudCB5b3UgY2hvb3NlIHRvIHVzZSBvciBhY2Nlc3Mg
c3VjaCBTZXJ2aWNlcyBhbmQvb3IgdGhpcmQgcGFydHkgbWF0ZXJpYWxzLCB5b3UgZG8gc28gYXQgeW91
ciBvd24gaW5pdGlhdGl2ZSBhbmQgcmlzayBhbmQgYXJlIHJlc3BvbnNpYmxlIGZvciBjb21wbGlhbmNl
IHdpdGggYWxsIGFwcGxpY2FibGUgbGF3cywgaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byBhcHBs
aWNhYmxlIGxvY2FsIGxhd3MgYW5kIHByaXZhY3kgYW5kIGRhdGEgY29sbGVjdGlvbiBsYXdzLiBTaGFy
aW5nIG9yIHRyYW5zbWl0dGluZyBwaG90b3MgdGhyb3VnaCB0aGUgU29mdHdhcmUgbWF5IGNhdXNlIG1l
dGFkYXRhLCBpbmNsdWRpbmcgcGhvdG8gbG9jYXRpb24gZGF0YSwgdG8gYmUgdHJhbnNtaXR0ZWQgd2l0
aCB0aGUgcGhvdG9zLiBWVENTZWN1cmUgYW5kIGl0cyBsaWNlbnNvcnMgcmVzZXJ2ZSB0aGUgcmlnaHQg
dG8gY2hhbmdlLCBzdXNwZW5kLCByZW1vdmUsIG9yIGRpc2FibGUgYWNjZXNzIHRvIGFueSBTZXJ2aWNl
cyBhdCBhbnkgdGltZSB3aXRob3V0IG5vdGljZS4gSW4gbm8gZXZlbnQgd2lsbCBWVENTZWN1cmUgYmUg
bGlhYmxlIGZvciB0aGUgcmVtb3ZhbCBvZiBvciBkaXNhYmxpbmcgb2YgYWNjZXNzIHRvIGFueSBzdWNo
IFNlcnZpY2VzLiBWVENTZWN1cmUgaW4gaXRzIHNvbGUgZGlzY3JldGlvbiBtYXkgYWxzbyBpbXBvc2Ug
bGltaXRzIG9uIHRoZSB1c2Ugb2Ygb3IgYWNjZXNzIHRvIGNlcnRhaW4gU2VydmljZXMgd2l0aG91dCBu
b3RpY2Ugb3IgbGlhYmlsaXR5LgoKCeKAoglUZXJtaW5hdGlvbi4gVGhpcyBMaWNlbnNlIGlzIGVmZmVj
dGl2ZSB1bnRpbCB0ZXJtaW5hdGVkLiBZb3VyIHJpZ2h0cyB1bmRlciB0aGlzIExpY2Vuc2Ugd2lsbCB0
ZXJtaW5hdGUgYXV0b21hdGljYWxseSBvciBvdGhlcndpc2UgY2Vhc2UgdG8gYmUgZWZmZWN0aXZlIHdp
dGhvdXQgbm90aWNlIGZyb20gVlRDU2VjdXJlIGlmIHlvdSBmYWlsIHRvIGNvbXBseSB3aXRoIGFueSB0
ZXJtKHMpIG9yIGNvbmRpdGlvbihzKSBvZiB0aGlzIExpY2Vuc2UuIFVwb24gdGhlIHRlcm1pbmF0aW9u
IG9mIHRoaXMgTGljZW5zZSwgeW91IHNoYWxsIGltbWVkaWF0ZWx5IGNlYXNlIGFsbCB1c2Ugb2YgdGhl
IFNvZnR3YXJlLiBTZWN0aW9ucyA0LCA1LCA2LCA3LCA4LCAxMSBhbmQgMTIgb2YgdGhpcyBMaWNlbnNl
IHNoYWxsIHN1cnZpdmUgYW55IHN1Y2ggdGVybWluYXRpb24gZm9yIGFueSByZWFzb24uCgoJ4oCiCTkx
MSBESVNDTEFJTUVSLiAgWW91IGFja25vd2xlZGdlIGFuZCBhZ3JlZSB0aGF0IDkxMSBTZXJ2aWNlIHdp
bGwgbm90IGJlIGF2YWlsYWJsZSB3aGVuIG1ha2luZyBhbnkgY2FsbHMgdXNpbmcgdGhlIFNvZnR3YXJl
LiA5MTEgU2VydmljZSBlbmFibGVzIHVzZXJzIHRvIGNvbW11bmljYXRlIHdpdGggZW1lcmdlbmN5IHNl
cnZpY2VzIHBlcnNvbm5lbCBieSBkaWFsaW5nIDkxMSBvbiBhIHdpcmVsaW5lLCB3aXJlbGVzcywgYW5k
L29yIG1vYmlsZSB0ZWxlcGhvbmUuIFlvdSBhY2tub3dsZWRnZSB0aGF0IHlvdSBhcmUgIHJlc3BvbnNp
YmxlIGZvciBtYWtpbmcgYXJyYW5nZW1lbnRzIHRvIGVuc3VyZSB0aGF0IHlvdSB3aWxsIGhhdmUgYWNj
ZXNzIHRvIDkxMSBTZXJ2aWNlIHdpdGhvdXQgcmVseWluZyBvbiB0aGUgU29mdHdhcmUgdG8gZG8gc28u
ICBZb3Ugc2hhbGwgYWxzbyBpbmZvcm0gYW55IG90aGVyIHVzZXIgb2YgdGhlIFNvZnR3YXJlIG9mIHRo
ZSB1bmF2YWlsYWJpbGl0eSBvZiB0cmFkaXRpb25hbCA5MTEgb3IgRTkxMSBkaWFsaW5nIGFuZCBhY2Nl
c3MgdG8gOTExIFNlcnZpY2Ugb3IgZW1lcmdlbmN5IHBlcnNvbm5lbC4gWW91IGZ1cnRoZXIgYWdyZWUg
dGhhdCBWVENTZWN1cmUgc2hhbGwgaGF2ZSBubyBsaWFiaWxpdHkgd2hhdHNvZXZlciB3aXRoIHJlc3Bl
Y3QgdG8gYW55IGF0dGVtcHQgYnkgeW91IG9yIGFueSBvdGhlciB1c2VyIHRvIGFjY2VzcyBhbnkgOTEx
IFNlcnZpY2UgdXNpbmcgdGhlIFNvZnR3YXJlLgoKCeKAoglEaXNjbGFpbWVyIG9mICAgV2FycmFudGll
cy4KCeKAoglJZiB5b3UgYXJlIGEgY3VzdG9tZXIgd2hvIGlzIGEgY29uc3VtZXIgKHNvbWVvbmUgd2hv
IHVzZXMgdGhlIFNvZnR3YXJlIG91dHNpZGUgb2YgeW91ciB0cmFkZSwgYnVzaW5lc3Mgb3IgcHJvZmVz
c2lvbiksIHlvdSBtYXkgaGF2ZSBsZWdhbCByaWdodHMgaW4geW91ciBjb3VudHJ5IG9mIHJlc2lkZW5j
ZSB3aGljaCB3b3VsZCBwcm9oaWJpdCB0aGUgZm9sbG93aW5nIGxpbWl0YXRpb25zIGZyb20gYXBwbHlp
bmcgdG8geW91LCBhbmQgd2hlcmUgcHJvaGliaXRlZCB0aGV5IHdpbGwgbm90IGFwcGx5IHRvIHlvdS4g
VG8gZmluZCBvdXQgbW9yZSBhYm91dCByaWdodHMsIHlvdSBzaG91bGQgY29udGFjdCBhIGxvY2FsIGNv
bnN1bWVyIGFkdmljZSBvcmdhbml6YXRpb24uCgoKCeKAoglZT1UgRVhQUkVTU0xZIEFDS05PV0xFREdF
IEFORCBBR1JFRSBUSEFULCBUTyBUSEUgRVhURU5UIFBFUk1JVFRFRCBCWSBBUFBMSUNBQkxFIExBVywg
VVNFIE9GIFRIRSBTT0ZUV0FSRSBBTkQgQU5ZIFNFUlZJQ0VTIFBFUkZPUk1FRCBCWSBPUiBBQ0NFU1NF
RCBUSFJPVUdIIFRIRSBTT0ZUV0FSRSBJUyBBVCBZT1VSIFNPTEUgUklTSyBBTkQgVEhBVCBUSEUgRU5U
SVJFIFJJU0sgQVMgVE8gU0FUSVNGQUNUT1JZIFFVQUxJVFksIFBFUkZPUk1BTkNFLCBBQ0NVUkFDWSBB
TkQgRUZGT1JUIElTIFdJVEggWU9VLgoKCeKAoglUTyBUSEUgTUFYSU1VTSBFWFRFTlQgUEVSTUlUVEVE
IEJZIEFQUExJQ0FCTEUgTEFXLCBUSEUgU09GVFdBUkUgQU5EIFNFUlZJQ0VTIEFSRSBQUk9WSURFRCAi
QVMgSVMiIEFORCAiQVMgQVZBSUxBQkxFIiwgV0lUSCBBTEwgRkFVTFRTIEFORCBXSVRIT1VUIFdBUlJB
TlRZIE9GIEFOWSBLSU5ELCBBTkQgVlRDU0VDVVJFIEFORCBWVENTRUNVUkUnUyBMSUNFTlNPUlMgKENP
TExFQ1RJVkVMWSBSRUZFUlJFRCBUTyBBUyAiVlRDU0VDVVJFIiBGT1IgVEhFIFBVUlBPU0VTIE9GIFNF
Q1RJT05TIDcgQU5EIDgpIEhFUkVCWSBESVNDTEFJTSBBTEwgV0FSUkFOVElFUyBBTkQgQ09ORElUSU9O
UyBXSVRIIFJFU1BFQ1QgVE8gVEhFIFNPRlRXQVJFIEFORCBTRVJWSUNFUywgRUlUSEVSIEVYUFJFU1Ms
IElNUExJRUQgT1IgU1RBVFVUT1JZLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElN
UExJRUQgV0FSUkFOVElFUyBBTkQvT1IgQ09ORElUSU9OUyBPRiBNRVJDSEFOVEFCSUxJVFksIFNBVElT
RkFDVE9SWSBRVUFMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSwgQUNDVVJBQ1ks
IFFVSUVUIEVOSk9ZTUVOVCwgQU5EIE5PTi1JTkZSSU5HRU1FTlQgT0YgVEhJUkQgUEFSVFkgUklHSFRT
LgoKCeKAoglWVENTRUNVUkUgRE9FUyBOT1QgV0FSUkFOVCBBR0FJTlNUIElOVEVSRkVSRU5DRSBXSVRI
IFlPVVIgRU5KT1lNRU5UIE9GIFRIRSBTT0ZUV0FSRSBBTkQgU0VSVklDRVMsIFRIQVQgVEhFIEZVTkNU
SU9OUyBDT05UQUlORUQgSU4sIE9SIFNFUlZJQ0VTIFBFUkZPUk1FRCBPUiBQUk9WSURFRCBCWSwgVEhF
IFNPRlRXQVJFIFdJTEwgTUVFVCBZT1VSIFJFUVVJUkVNRU5UUywgVEhBVCBUSEUgT1BFUkFUSU9OIE9G
IFRIRSBTT0ZUV0FSRSBBTkQgU0VSVklDRVMgV0lMTCBCRSBVTklOVEVSUlVQVEVEIE9SIEVSUk9SLUZS
RUUsIFRIQVQgVEhFIFNPRlRXQVJFIEFORC9PUiBBTlkgU0VSVklDRSBXSUxMIENPTlRJTlVFIFRPIEJF
IE1BREUgQVZBSUxBQkxFLCBUSEFUIERFRkVDVFMgSU4gVEhFIFNPRlRXQVJFIE9SIFNFUlZJQ0VTIFdJ
TEwgQkUgQ09SUkVDVEVELCBPUiBUSEFUIFRIRSBTT0ZUV0FSRSBXSUxMIEJFIENPTVBBVElCTEUgT1Ig
V09SSyBXSVRIIEFOWSBUSElSRCBQQVJUWSBTT0ZUV0FSRSwgQVBQTElDQVRJT05TIE9SIFRISVJEIFBB
UlRZIFNFUlZJQ0VTLiBJTlNUQUxMQVRJT04gT0YgVEhFIFNPRlRXQVJFIE1BWSBBRkZFQ1QgVEhFIEFW
QUlMQUJJTElUWSBBTkQgVVNBQklMSVRZIE9GIFRISVJEIFBBUlRZIFNPRlRXQVJFLCBBUFBMSUNBVElP
TlMgT1IgVEhJUkQgUEFSVFkgU0VSVklDRVMsIEFTIFdFTEwgQVMgVlRDU0VDVVJFIFBST0RVQ1RTIEFO
RCBTRVJWSUNFUy4KCgnigKIJWU9VIEZVUlRIRVIgQUNLTk9XTEVER0UgVEhBVCBUSEUgU09GVFdBUkUg
QU5EIFNFUlZJQ0VTIEFSRSBOT1QgSU5URU5ERUQgT1IgU1VJVEFCTEUgRk9SIFVTRSBJTiBTSVRVQVRJ
T05TIE9SIEVOVklST05NRU5UUyBXSEVSRSBUSEUgRkFJTFVSRSBPUiBUSU1FIERFTEFZUyBPRiwgT1Ig
RVJST1JTIE9SIElOQUNDVVJBQ0lFUyBJTiwgVEhFIENPTlRFTlQsIERBVEEgT1IgSU5GT1JNQVRJT04g
UFJPVklERUQgQlkgVEhFIFNPRlRXQVJFIE9SIFNFUlZJQ0VTIENPVUxEIExFQUQgVE8gREVBVEgsIFBF
UlNPTkFMIElOSlVSWSwgUFJPUEVSVFkgREFNQUdFLCBPUiBTRVZFUkUgUEhZU0lDQUwgT1IgRU5WSVJP
Tk1FTlRBTCBEQU1BR0UsIElOQ0xVRElORyBXSVRIT1VUIExJTUlUQVRJT04gVEhFIE9QRVJBVElPTiBP
RiBOVUNMRUFSIEZBQ0lMSVRJRVMsIEFJUkNSQUZUIE5BVklHQVRJT04gT1IgQ09NTVVOSUNBVElPTiBT
WVNURU1TLCBBSVIgVFJBRkZJQyBDT05UUk9MLCBMSUZFIFNVUFBPUlQgT1IgV0VBUE9OUyBTWVNURU1T
LgoKCeKAoglOTyBPUkFMIE9SIFdSSVRURU4gSU5GT1JNQVRJT04gT1IgQURWSUNFIEdJVkVOIEJZIFZU
Q1NFQ1VSRSBPUiBBIFZUQ1NFQ1VSRSBBVVRIT1JJWkVEIFJFUFJFU0VOVEFUSVZFIFNIQUxMIENSRUFU
RSBBTlkgV0FSUkFOVFkuIElGIFRIRSBTT0ZUV0FSRSBBTkQvT1IgQU5ZIFNFUlZJQ0VTIEFSRSAgREVG
RUNUSVZFLCBZT1UgQVNTVU1FIFRIRSBFTlRJUkUgQ09TVCBBTkQgUklTSyBPRiBBTEwgTkVDRVNTQVJZ
IFNFUlZJQ0lORywgUkVQQUlSIE9SIENPUlJFQ1RJT04uIFNPTUUgSlVSSVNESUNUSU9OUyBETyBOT1Qg
QUxMT1cgVEhFIEVYQ0xVU0lPTiBPRiBJTVBMSUVEIFdBUlJBTlRJRVMgT1IgTElNSVRBVElPTlMgT04g
QVBQTElDQUJMRSBTVEFUVVRPUlkgUklHSFRTIE9GIEEgQ09OU1VNRVIsIFNPIFRIRSBBQk9WRSBFWENM
VVNJT04gQU5EIExJTUlUQVRJT05TIE1BWSBOT1QgQVBQTFkgVE8gWU9VLgoKCeKAoglMaW1pdGF0aW9u
IG9mIExpYWJpbGl0eS4gVE8gVEhFIEVYVEVOVCBOT1QgUFJPSElCSVRFRCBCWSBBUFBMSUNBQkxFIExB
VywgSU4gTk8gRVZFTlQgU0hBTEwgVlRDU0VDVVJFLCBJVFMgT0ZGSUNFUlMsIFBSSU5DSVBBTFMsIERJ
UkVDVE9SUywgRU1QTE9ZRUVTLCAgQ09OVFJBQ1RPUlMsIEFORCBBR0VOVFMsIEJFIExJQUJMRSBGT1Ig
QU5ZIFBFUlNPTkFMIElOSlVSWSAoSU5DTFVESU5HIERFQVRIKSwgUFJPUEVSVFkgREFNQUdFLCBPUiBB
TlkgSU5DSURFTlRBTCwgU1BFQ0lBTCwgSU5ESVJFQ1QsIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyBX
SEFUU09FVkVSLCBJTkNMVURJTkcsIFdJVEhPVVQgTElNSVRBVElPTiwgQU5ZIERBTUFHRVMgRk9SIExP
U1MgT0YgUkVWRU5VRSBPUiBQUk9GSVRTLCBDT1JSVVBUSU9OIE9SIExPU1MgT0YgQU5ZIERBVEEsIEZB
SUxVUkUgVE8gVFJBTlNNSVQgT1IgUkVDRUlWRSBBTlkgREFUQSwgQlVTSU5FU1MgSU5URVJSVVBUSU9O
IE9SIEFOWSBPVEhFUiBEQU1BR0VTIE9SIExPU1NFUywgQVJJU0lORyBPVVQgT0YgT1IgUkVMQVRFRCBU
TyBZT1VSIFVTRSBPUiBJTkFCSUxJVFkgVE8gVVNFIFRIRSBTT0ZUV0FSRSBBTkQvT1IgU0VSVklDRVMg
T1IgQU5ZIFRISVJEIFBBUlRZIFNPRlRXQVJFIE9SIEFQUExJQ0FUSU9OUyBJTiBDT05KVU5DVElPTiBX
SVRIIFRIRSBTT0ZUV0FSRSBBTkQvT1IgU0VSVklDRVMsIEhPV0VWRVIgQ0FVU0VELCBSRUdBUkRMRVNT
IE9GIFRIRSBUSEVPUlkgT0YgTElBQklMSVRZIChXSEVUSEVSIElOIENPTlRSQUNULCBUT1JUIE9SIE9U
SEVSV0lTRSkgQU5EIEVWRU4gSUYgVlRDU0VDVVJFIEhBUyBCRUVOIEFEVklTRUQgT0YgVEhFIFBPU1NJ
QklMSVRZIE9GIEFOWSBTVUNIIERBTUFHRVMuIFNPTUUgSlVSSVNESUNUSU9OUyBETyBOT1QgQUxMT1cg
VEhFIEVYQ0xVU0lPTiBPUiBMSU1JVEFUSU9OIE9GIExJQUJJTElUWSBGT1IgUEVSU09OQUwgSU5KVVJZ
LCBPUiBPRiBJTkNJREVOVEFMIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUywgU08gVEhJUyBMSU1JVEFU
SU9OIE1BWSBOT1QgQVBQTFkgVE8gWU9VLiBJbiBubyBldmVudCBzaGFsbCBWVENTZWN1cmUncyB0b3Rh
bCBsaWFiaWxpdHkgdG8geW91IGZvciBhbnkgYW5kIGFsbCBkYW1hZ2VzIChvdGhlciB0aGFuIGFzIG1h
eSBiZSByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBpbiBjYXNlcyBpbnZvbHZpbmcgcGVyc29uYWwg
aW5qdXJ5KSBleGNlZWQgdGhlIGFtb3VudCBvZiB0d28gaHVuZHJlZCBhbmQgZmlmdHkgZG9sbGFycyAo
VS5TLiQyNTAuMDApLiBObyBhY3Rpb24gYWdhaW5zdCBWVENTZWN1cmUgYXJpc2luZyBvdXQgb2YgdGhp
cyBBZ3JlZW1lbnQgbWF5IGJlIGJyb3VnaHQgYnkgeW91IG1vcmUgdGhhbiBvbmUgKDEpIHllYXIgYWZ0
ZXIgdGhlIGNhdXNlIG9mIGFjdGlvbiBvciBjbGFpbSBmb3IgZGFtYWdlcyBoYXMgYXJpc2VuLiBUaGlz
IFNlY3Rpb27CoDggd2lsbCBhcHBseSB0byB0aGUgbWF4aW11bSBleHRlbnQgcGVybWl0dGVkIHVuZGVy
IGFwcGxpY2FibGUgbGF3LiBUaGUgZm9yZWdvaW5nIGxpbWl0YXRpb25zIHdpbGwgYXBwbHkgZXZlbiBp
ZiB0aGUgYWJvdmUgc3RhdGVkIHJlbWVkeSBmYWlscyBvZiBpdHMgZXNzZW50aWFsIHB1cnBvc2UuCgoJ
4oCiCUV4cG9ydCBDb250cm9sLiBZb3UgbWF5IG5vdCB1c2Ugb3Igb3RoZXJ3aXNlIGV4cG9ydCBvciBy
ZS1leHBvcnQgdGhlIFNvZnR3YXJlIGV4Y2VwdCBhcyBhdXRob3JpemVkIGJ5IFVuaXRlZCBTdGF0ZXMg
bGF3IGFuZCB0aGUgbGF3cyBvZiB0aGUganVyaXNkaWN0aW9uKHMpIGluIHdoaWNoIHRoZSBTb2Z0d2Fy
ZSB3YXMgb2J0YWluZWQuIEluIHBhcnRpY3VsYXIsIGJ1dCB3aXRob3V0IGxpbWl0YXRpb24sIHRoZSBT
b2Z0d2FyZSBtYXkgbm90IGJlIGV4cG9ydGVkIG9yIHJlLWV4cG9ydGVkIChhKSBpbnRvIGFueSBVLlMu
IGVtYmFyZ29lZCBjb3VudHJpZXMgb3IgKGIpIHRvIGFueW9uZSBvbiB0aGUgVS5TLiBUcmVhc3VyeSBE
ZXBhcnRtZW50J3MgbGlzdCBvZiBTcGVjaWFsbHkgRGVzaWduYXRlZCBOYXRpb25hbHMgb3IgdGhlIFUu
Uy4gRGVwYXJ0bWVudCBvZiBDb21tZXJjZSBEZW5pZWQgUGVyc29u4oCZcyBMaXN0IG9yIEVudGl0eSBM
aXN0IG9yIGFueSBvdGhlciByZXN0cmljdGVkIHBhcnR5IGxpc3RzLiBCeSB1c2luZyB0aGUgU29mdHdh
cmUsIHlvdSByZXByZXNlbnQgYW5kIHdhcnJhbnQgdGhhdCB5b3UgYXJlIG5vdCBsb2NhdGVkIGluIGFu
eSBzdWNoIGNvdW50cnkgb3Igb24gYW55IHN1Y2ggbGlzdC4gWW91IGFsc28gYWdyZWUgdGhhdCB5b3Ug
d2lsbCBub3QgdXNlIHRoZSBTb2Z0d2FyZSBmb3IgYW55IHB1cnBvc2VzIHByb2hpYml0ZWQgYnkgVW5p
dGVkIFN0YXRlcyBsYXcsIGluY2x1ZGluZywgd2l0aG91dCBsaW1pdGF0aW9uLCB0aGUgZGV2ZWxvcG1l
bnQsIGRlc2lnbiwgbWFudWZhY3R1cmUgb3IgcHJvZHVjdGlvbiBvZiBtaXNzaWxlcywgbnVjbGVhciwg
Y2hlbWljYWwgb3IgYmlvbG9naWNhbCB3ZWFwb25zLgoKCeKAoglDb250cm9sbGluZyBMYXcgYW5kIFNl
dmVyYWJpbGl0eS4gVGhpcyBMaWNlbnNlIHdpbGwgYmUgZ292ZXJuZWQgYnkgYW5kIGNvbnN0cnVlZCBp
biBhY2NvcmRhbmNlIHdpdGggdGhlIGxhd3Mgb2YgdGhlIFN0YXRlIG9mIEZsb3JpZGEsIGV4Y2x1ZGlu
ZyBpdHMgY29uZmxpY3Qgb2YgbGF3IHByaW5jaXBsZXMuIFRoaXMgTGljZW5zZSBzaGFsbCBub3QgYmUg
Z292ZXJuZWQgYnkgdGhlIFVuaXRlZCBOYXRpb25zIENvbnZlbnRpb24gb24gQ29udHJhY3RzIGZvciB0
aGUgSW50ZXJuYXRpb25hbCBTYWxlIG9mIEdvb2RzLCB0aGUgYXBwbGljYXRpb24gb2Ygd2hpY2ggaXMg
ZXhwcmVzc2x5IGV4Y2x1ZGVkLiAgSWYsIGZvciBhbnkgcmVhc29uLCBhIGNvdXJ0IG9mIGNvbXBldGVu
dCBqdXJpc2RpY3Rpb24gZmluZHMgYW55IHByb3Zpc2lvbiBvZiB0aGlzIExpY2Vuc2UsIG9yIHBvcnRp
b24gdGhlcmVvZiwgdG8gYmUgdW5lbmZvcmNlYWJsZSwgdGhlIHJlbWFpbmRlciBvZiB0aGlzIExpY2Vu
c2Ugc2hhbGwgY29udGludWUgaW4gZnVsbCBmb3JjZSBhbmQgZWZmZWN0LgoKMTEuIAlDb21wbGV0ZSBB
Z3JlZW1lbnQ7IEdvdmVybmluZyBMYW5ndWFnZTsgV2FpdmVyLiBUaGlzIExpY2Vuc2UgY29uc3RpdHV0
ZXMgdGhlIGVudGlyZSBhZ3JlZW1lbnQgYmV0d2VlbiB5b3UgYW5kIFZUQ1NlY3VyZSByZWxhdGluZyB0
byB0aGUgU29mdHdhcmUgYW5kIFNlcnZpY2VzIHN1cGVyc2VkZXMgYWxsIHByaW9yIG9yIGNvbnRlbXBv
cmFuZW91cyB1bmRlcnN0YW5kaW5ncyByZWdhcmRpbmcgc3VjaCBzdWJqZWN0IG1hdHRlci4gVGhpcyBM
aWNlbnNlIHdpbGwgYmUgY29uc3RydWVkIGFuZCBpbnRlcnByZXRlZCBmYWlybHksIGluIGFjY29yZGFu
Y2Ugd2l0aCB0aGUgcGxhaW4gbWVhbmluZyBvZiBpdHMgdGVybXMsIGFuZCB0aGVyZSB3aWxsIGJlIG5v
IHByZXN1bXB0aW9uIG9yIGluZmVyZW5jZSBhZ2FpbnN0IHRoZSBwYXJ0eSBkcmFmdGluZyB0aGlzIExp
Y2Vuc2UgaW4gY29uc3RydWluZyBvciBpbnRlcnByZXRpbmcgYW55IG9mIHRoZSBwcm92aXNpb25zIGNv
bnRhaW5lZCBpbiB0aGlzIExpY2Vuc2UuIEFzIHNldCBmb3J0aCBhYm92ZSwgVlRDU2VjdXJlIHJlc2Vy
dmVzIHRoZSByaWdodCB0byBhbWVuZCBvciBtb2RpZnkgdGhpcyBMaWNlbnNlIGJ5IHBvc3Rpbmcgc3Vj
aCBhbWVuZG1lbnQgb3IgbW9kaWZpY2F0aW9uIG9uIHRoZSBWVENTZWN1cmUgd2Vic2l0ZSwgYW5kIHlv
dSBhZ3JlZSB0byBiZSBib3VuZCBieSBhbnkgc3VjaCBhbWVuZG1lbnQgb3IgbW9kaWZpY2F0aW9uLiBF
eGNlcHQgYXMgb3RoZXJ3aXNlIHN0YXRlZCBhYm92ZSwgbm8gYW1lbmRtZW50IHRvIG9yIG1vZGlmaWNh
dGlvbiBvZiB0aGlzIExpY2Vuc2Ugd2lsbCBiZSBiaW5kaW5nIHVubGVzcyBpbiB3cml0aW5nIGFuZCBz
aWduZWQgYnkgVlRDU2VjdXJlLiBBbnkgdHJhbnNsYXRpb24gb2YgdGhpcyBMaWNlbnNlIGlzIGRvbmUg
Zm9yIGxvY2FsIHJlcXVpcmVtZW50cyBhbmQgaW4gdGhlIGV2ZW50IG9mIGEgZGlzcHV0ZSBiZXR3ZWVu
IHRoZSBFbmdsaXNoIGFuZCBhbnkgbm9uLUVuZ2xpc2ggdmVyc2lvbnMsIHRoZSBFbmdsaXNoIHZlcnNp
b24gb2YgdGhpcyBMaWNlbnNlIHNoYWxsIGdvdmVybiwgdG8gdGhlIGV4dGVudCBub3QgcHJvaGliaXRl
ZCBieSBsb2NhbCBsYXcgaW4geW91ciBqdXJpc2RpY3Rpb24uIE5vIGRlbGF5IGluIGV4ZXJjaXNpbmcg
YW55IHJpZ2h0IG9yIHJlbWVkeSB3aWxsIG9wZXJhdGUgYXMgYSB3YWl2ZXIgb2Ygc3VjaCByaWdodCBv
ciByZW1lZHkgb3IgYW55IG90aGVyIHJpZ2h0IG9yIHJlbWVkeS4gQSB3YWl2ZXIgb24gb25lIG9jY2Fz
aW9uIHdpbGwgbm90IGJlIGNvbnN0cnVlZCBhcyBhIHdhaXZlciBvZiBhbnkgcmlnaHQgb3IgcmVtZWR5
IG9uIGFueSBmdXR1cmUgb2NjYXNpb24uCl9fX18gSSBBQ0NFUFQgVEhFIEZPUkVHT0lORyBMSUNFTlNF
IFRFUk1TIEFORCBDT05ESVRJT05TLgo
</mutableString>
                    <fontDescription key="fontDescription" name="HelveticaNeue" family="Helvetica Neue" pointSize="14"/>
                    <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                </textView>
                <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="middleTruncation" id="iI4-qI-8Oj">
                    <rect key="frame" x="522" y="977" width="46" height="30"/>
                    <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                    <state key="normal" title="Exit">
                        <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                    </state>
                    <connections>
                        <action selector="onExitClick:" destination="-1" eventType="touchUpInside" id="jtb-3U-Jtl"/>
                    </connections>
                </button>
                <button opaque="NO" userInteractionEnabled="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="middleTruncation" id="MPQ-HW-ynS">
                    <rect key="frame" x="216" y="977" width="59" height="30"/>
                    <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                    <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
                    <state key="normal" title="Accept">
                        <color key="titleColor" white="0.66666666666666663" alpha="1" colorSpace="calibratedWhite"/>
                    </state>
                    <connections>
                        <action selector="onAcceptClick:" destination="-1" eventType="touchUpInside" id="xJQ-J7-ZY6"/>
                    </connections>
                </button>
            </subviews>
            <color key="backgroundColor" red="0.0" green="0.21960784310000001" blue="0.34509803919999998" alpha="1" colorSpace="calibratedRGB"/>
            <freeformSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
            <point key="canvasLocation" x="308" y="254"/>
        </view>
    </objects>
</document>
